#pragma once

#include "sys_init.h"

// Global assets
extern lv_obj_t * screenMain;

void screenMainInit(void);
void temperatureScaleInit(void);
void humidityScaleInit(void);
void pressureValInit(void);
void alarmModalInit(void);
void updateProcessValues(float temperature, float humidity, float pressure);
void setIconLink(bool state);
void setIconEth(bool state);
void setIconCycle(bool state);
void setIconBell(bool state);
void setAlarmState(void);

// Icon images
#ifndef LV_ATTRIBUTE_MEM_ALIGN
#define LV_ATTRIBUTE_MEM_ALIGN
#endif

// Link icon (Sensor modbus link status) ----------------------------------------->
#ifndef LV_ATTRIBUTE_LINK
#define LV_ATTRIBUTE_LINK
#endif

static const
LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_LINK
uint8_t link_map[] = {

    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7c,0xee,0xd8,0x10,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x2e,0xff,0xff,0xff,0xf6,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x9f,0xff,0xff,0xff,0xff,0x60,0x00,
    0x00,0x00,0x00,0x00,0x00,0x15,0x89,0x73,0x00,0x5f,0xf9,0x33,0x7e,0xff,0xf2,0x00,
    0x00,0x00,0x00,0x00,0x07,0xff,0xff,0xff,0xc3,0x02,0x10,0x00,0x01,0xdf,0xf9,0x00,
    0x00,0x00,0x00,0x00,0xaf,0xff,0xff,0xff,0xff,0x40,0x00,0x00,0x00,0x5f,0xfe,0x00,
    0x00,0x00,0x00,0x0a,0xff,0xfe,0xa8,0xbf,0xff,0xf2,0x00,0x00,0x00,0x1f,0xff,0x10,
    0x00,0x00,0x00,0xaf,0xff,0xb0,0x13,0x03,0xef,0xfa,0x00,0x00,0x00,0x0f,0xff,0x10,
    0x00,0x00,0x0a,0xff,0xfa,0x01,0xef,0x90,0x5f,0xff,0x00,0x00,0x00,0x4f,0xff,0x00,
    0x00,0x00,0xaf,0xff,0xb0,0x09,0xff,0xc0,0x0f,0xff,0x30,0x00,0x00,0xcf,0xfa,0x00,
    0x00,0x0a,0xff,0xfb,0x00,0x0f,0xff,0x60,0x0d,0xff,0x40,0x00,0x0b,0xff,0xf3,0x00,
    0x00,0x8f,0xff,0xb0,0x00,0x3f,0xff,0x00,0x0f,0xff,0x30,0x00,0xbf,0xff,0x80,0x00,
    0x03,0xff,0xfb,0x00,0x00,0x4f,0xfd,0x00,0x6f,0xff,0x00,0x0b,0xff,0xfa,0x00,0x00,
    0x0b,0xff,0xc0,0x00,0x00,0x3f,0xff,0x00,0xcf,0xf9,0x00,0xbf,0xff,0xa0,0x00,0x00,
    0x0f,0xff,0x40,0x00,0x00,0x0f,0xff,0x50,0x9f,0xe1,0x0a,0xff,0xfa,0x00,0x00,0x00,
    0x1f,0xff,0x00,0x00,0x00,0x0a,0xff,0xe3,0x03,0x10,0xbf,0xff,0xa0,0x00,0x00,0x00,
    0x1f,0xff,0x10,0x00,0x00,0x02,0xff,0xff,0xb8,0xae,0xff,0xfa,0x00,0x00,0x00,0x00,
    0x0e,0xff,0x50,0x00,0x00,0x00,0x4f,0xff,0xff,0xff,0xff,0xa0,0x00,0x00,0x00,0x00,
    0x0a,0xff,0xd1,0x00,0x00,0x12,0x03,0xcf,0xff,0xff,0xe7,0x00,0x00,0x00,0x00,0x00,
    0x02,0xff,0xfe,0x73,0x39,0xff,0x50,0x03,0x79,0x85,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x6f,0xff,0xff,0xff,0xff,0x90,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x06,0xff,0xff,0xff,0xfe,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x18,0xde,0xec,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

};

const lv_image_dsc_t link = {
    { LV_IMAGE_HEADER_MAGIC, LV_COLOR_FORMAT_A4, 0, 31, 25, 16, 0 }, // header
    sizeof(link_map), // data_size
    link_map,         // data
    NULL              // reserved
};

// Ethernet icon (Ethernet connection status) ------------------------------------->
#ifndef LV_ATTRIBUTE_NETWORK_WIRED
#define LV_ATTRIBUTE_NETWORK_WIRED
#endif

static const
LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_NETWORK_WIRED
uint8_t network_wired_map[] = {

    0x00,0x00,0x00,0x00,0x00,0xaf,0xff,0xff,0xff,0xff,0xa0,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x07,0xff,0xff,0xff,0xff,0xff,0xf7,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x0a,0xff,0xff,0xff,0xff,0xff,0xfa,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x0b,0xff,0x72,0x22,0x22,0x7f,0xfb,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x0b,0xff,0x60,0x00,0x00,0x6f,0xfb,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x0b,0xff,0x60,0x00,0x00,0x6f,0xfb,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x0b,0xff,0xdb,0xbb,0xbb,0xdf,0xfb,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x09,0xff,0xff,0xff,0xff,0xff,0xf9,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x02,0xef,0xff,0xff,0xff,0xff,0xe2,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x15,0x66,0xff,0xf6,0x65,0x10,0x00,0x00,0x00,0x00,0x00,
    0x00,0x11,0x11,0x11,0x11,0x11,0x11,0xff,0xf1,0x11,0x11,0x11,0x11,0x11,0x10,0x00,
    0x8f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x80,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,
    0x8f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x80,
    0x00,0x11,0x11,0xdf,0xf5,0x11,0x11,0x11,0x11,0x11,0x15,0xff,0xd1,0x11,0x10,0x00,
    0x00,0x04,0x66,0xef,0xf9,0x66,0x20,0x00,0x00,0x26,0x69,0xff,0xe6,0x64,0x00,0x00,
    0x00,0xdf,0xff,0xff,0xff,0xff,0xf5,0x00,0x05,0xff,0xff,0xff,0xff,0xff,0xd0,0x00,
    0x05,0xff,0xff,0xff,0xff,0xff,0xfd,0x00,0x0d,0xff,0xff,0xff,0xff,0xff,0xf5,0x00,
    0x07,0xff,0xeb,0xbb,0xbb,0xcf,0xff,0x00,0x0f,0xff,0xcb,0xbb,0xbb,0xef,0xf7,0x00,
    0x07,0xff,0xa0,0x00,0x00,0x2f,0xff,0x00,0x0f,0xff,0x20,0x00,0x00,0xaf,0xf7,0x00,
    0x07,0xff,0xa0,0x00,0x00,0x2f,0xff,0x00,0x0f,0xff,0x20,0x00,0x00,0xaf,0xf7,0x00,
    0x07,0xff,0xb2,0x22,0x22,0x4f,0xff,0x00,0x0f,0xff,0x42,0x22,0x22,0xbf,0xf7,0x00,
    0x07,0xff,0xff,0xff,0xff,0xff,0xfe,0x00,0x0e,0xff,0xff,0xff,0xff,0xff,0xf6,0x00,
    0x03,0xff,0xff,0xff,0xff,0xff,0xfb,0x00,0x0b,0xff,0xff,0xff,0xff,0xff,0xf3,0x00,
    0x00,0x7e,0xff,0xff,0xff,0xff,0xc2,0x00,0x02,0xcf,0xff,0xff,0xff,0xfe,0x70,0x00,

};

const lv_image_dsc_t network_wired = {
    { LV_IMAGE_HEADER_MAGIC, LV_COLOR_FORMAT_A4, 0, 31, 25, 16, 0 }, // header
    sizeof(network_wired_map), // data_size
    network_wired_map,         // data
    NULL              // reserved
};

// Compressor icon (Compressor running status) ------------------------------------>
#ifndef LV_ATTRIBUTE_ARROWS_SPIN
#define LV_ATTRIBUTE_ARROWS_SPIN
#endif

static const
LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_ARROWS_SPIN
uint8_t arrows_spin_map[] = {

    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x05,0x65,0x30,0x00,0x00,0x00,0x00,0x00,
    0x00,0x4a,0xaa,0xaa,0xa1,0x1f,0xff,0xff,0xa3,0x00,0x07,0x40,0x00,
    0x00,0x7f,0xff,0xff,0xf5,0x1f,0xff,0xff,0xff,0x90,0x9f,0xa0,0x00,
    0x00,0x09,0xff,0xff,0xf6,0x0c,0xbc,0xff,0xff,0xfe,0xff,0xa0,0x00,
    0x00,0x00,0xef,0xff,0xf6,0x00,0x00,0x04,0xcf,0xff,0xff,0xa0,0x00,
    0x00,0x09,0xff,0xff,0xf6,0x00,0x00,0x00,0x0d,0xff,0xff,0xa0,0x00,
    0x00,0x3f,0xff,0xdf,0xf6,0x00,0x00,0x00,0x9f,0xff,0xff,0xa0,0x00,
    0x00,0xaf,0xfc,0x09,0xf5,0x00,0x00,0x04,0xff,0xff,0xff,0x90,0x00,
    0x00,0xff,0xf4,0x00,0x40,0x00,0x00,0x00,0x56,0x66,0x66,0x10,0x00,
    0x03,0xff,0xf0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x10,0x00,
    0x05,0xff,0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xcf,0xf5,0x00,
    0x06,0xff,0xb0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xbf,0xf6,0x00,
    0x05,0xff,0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xcf,0xf5,0x00,
    0x00,0x11,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xf3,0x00,
    0x00,0x16,0x66,0x66,0x50,0x00,0x00,0x00,0x40,0x05,0xff,0xf0,0x00,
    0x00,0x9f,0xff,0xff,0xf4,0x00,0x00,0x05,0xf9,0x0c,0xff,0xa0,0x00,
    0x00,0xaf,0xff,0xff,0x90,0x00,0x00,0x06,0xff,0xdf,0xff,0x20,0x00,
    0x00,0xaf,0xff,0xfd,0x00,0x00,0x00,0x06,0xff,0xff,0xf9,0x00,0x00,
    0x00,0xaf,0xff,0xff,0xc5,0x00,0x00,0x06,0xff,0xff,0xe0,0x00,0x00,
    0x00,0xaf,0xfe,0xff,0xff,0xfc,0xbc,0x06,0xff,0xff,0xf9,0x00,0x00,
    0x00,0xaf,0x90,0x9f,0xff,0xff,0xff,0x15,0xff,0xff,0xff,0x70,0x00,
    0x00,0x47,0x00,0x03,0xaf,0xff,0xff,0x11,0xaa,0xaa,0xaa,0x40,0x00,
    0x00,0x00,0x00,0x00,0x00,0x35,0x65,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

};

const lv_image_dsc_t arrows_spin = {
    { LV_IMAGE_HEADER_MAGIC, LV_COLOR_FORMAT_A4, 0, 25, 25, 13, 0 }, // header
    sizeof(arrows_spin_map), // data_size
    arrows_spin_map,         // data
    NULL              // reserved
};

// Alarm bell icon ------------------------------------------------------------>
#ifndef LV_ATTRIBUTE_BELL
#define LV_ATTRIBUTE_BELL
#endif

static const
LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_BELL
uint8_t bell_map[] = {

    0x00,0x00,0x00,0x00,0x02,0xdd,0x20,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x08,0xff,0x80,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x3c,0xff,0xc3,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x3c,0xff,0xff,0xff,0xc3,0x00,0x00,0x00,
    0x00,0x00,0x06,0xff,0xff,0xff,0xff,0xff,0x60,0x00,0x00,
    0x00,0x00,0x4f,0xff,0xff,0xff,0xff,0xff,0xf4,0x00,0x00,
    0x00,0x00,0xef,0xff,0xff,0xff,0xff,0xff,0xfe,0x00,0x00,
    0x00,0x05,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x50,0x00,
    0x00,0x0a,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xa0,0x00,
    0x00,0x0c,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xc0,0x00,
    0x00,0x0d,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xd0,0x00,
    0x00,0x0e,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xe0,0x00,
    0x00,0x0f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0,0x00,
    0x00,0x3f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf3,0x00,
    0x00,0x8f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf8,0x00,
    0x01,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x10,
    0x0a,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xa0,
    0x6f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf6,
    0xef,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,
    0xbf,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfb,
    0x04,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x40,
    0x00,0x00,0x00,0x00,0x22,0x22,0x22,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0xff,0xff,0xff,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x9f,0xff,0xf9,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x08,0xee,0x80,0x00,0x00,0x00,0x00,

};

const lv_image_dsc_t bell = {
    { LV_IMAGE_HEADER_MAGIC, LV_COLOR_FORMAT_A4, 0, 22, 25, 11, 0 }, // header
    sizeof(bell_map), // data_size
    bell_map,         // data
    NULL              // reserved
};

// Lock icon ------------------------------------------------------------------>
#ifndef LV_ATTRIBUTE_LOCK
#define LV_ATTRIBUTE_LOCK
#endif

static const
LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_LOCK
uint8_t lock_map[] = {

    0x00,0x00,0x00,0x01,0x8d,0xff,0xc8,0x10,0x00,0x00,0x00,
    0x00,0x00,0x00,0x5f,0xff,0xff,0xff,0xf5,0x00,0x00,0x00,
    0x00,0x00,0x05,0xff,0xff,0xff,0xff,0xff,0x50,0x00,0x00,
    0x00,0x00,0x1f,0xff,0xf7,0x22,0x7f,0xff,0xf1,0x00,0x00,
    0x00,0x00,0x9f,0xff,0x20,0x00,0x02,0xff,0xf9,0x00,0x00,
    0x00,0x00,0xef,0xf6,0x00,0x00,0x00,0x6f,0xfd,0x00,0x00,
    0x00,0x00,0xff,0xf2,0x00,0x00,0x00,0x2f,0xff,0x00,0x00,
    0x00,0x01,0xff,0xf1,0x00,0x00,0x00,0x1f,0xff,0x10,0x00,
    0x00,0x01,0xff,0xf1,0x00,0x00,0x00,0x1f,0xff,0x10,0x00,
    0x02,0x7a,0xff,0xfa,0x99,0x99,0x99,0xaf,0xff,0xa7,0x20,
    0x3f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf3,
    0xcf,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfc,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
    0xdf,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfd,
    0x7f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf7,
    0x07,0xdf,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfd,0x70,

};

const lv_image_dsc_t lock = {
    { LV_IMAGE_HEADER_MAGIC, LV_COLOR_FORMAT_A4, 0, 22, 25, 11, 0 }, // header
    sizeof(lock_map), // data_size
    lock_map,         // data
    NULL              // reserved
};

// Unlock icon
#ifndef LV_ATTRIBUTE_LOCK_OPEN
#define LV_ATTRIBUTE_LOCK_OPEN
#endif

static const
LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_LOCK_OPEN
uint8_t lock_open_map[] = {

    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x8c,0xff,0xc8,0x10,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x5f,0xff,0xff,0xff,0xf5,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x05,0xff,0xff,0xff,0xff,0xff,0x50,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1f,0xff,0xf7,0x22,0x7f,0xff,0xe1,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x8f,0xff,0x20,0x00,0x02,0xff,0xf7,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xcf,0xf7,0x00,0x00,0x00,0x7f,0xfc,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xf2,0x00,0x00,0x00,0x2f,0xff,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xf1,0x00,0x00,0x00,0x1f,0xff,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xf1,0x00,0x00,0x00,0x1f,0xff,
    0x02,0x89,0x99,0x99,0x99,0x99,0x99,0xff,0xfa,0x97,0x10,0x00,0x1f,0xff,
    0x3f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xe1,0x00,0x08,0xe6,
    0xcf,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf8,0x00,0x00,0x00,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfc,0x00,0x00,0x00,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfc,0x00,0x00,0x00,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfc,0x00,0x00,0x00,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfc,0x00,0x00,0x00,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfc,0x00,0x00,0x00,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfc,0x00,0x00,0x00,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfc,0x00,0x00,0x00,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfc,0x00,0x00,0x00,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfc,0x00,0x00,0x00,
    0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfc,0x00,0x00,0x00,
    0xdf,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfa,0x00,0x00,0x00,
    0x7f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf4,0x00,0x00,0x00,
    0x07,0xdf,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfd,0x50,0x00,0x00,0x00,

};

const lv_image_dsc_t lock_open = {
    { LV_IMAGE_HEADER_MAGIC, LV_COLOR_FORMAT_A4, 0, 28, 25, 14, 0 }, // header
    sizeof(lock_open_map), // data_size
    lock_open_map,         // data
    NULL              // reserved
};